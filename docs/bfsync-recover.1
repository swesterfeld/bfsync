'\" t
.\"     Title: bfsync-recover
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 06/28/2018
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "BFSYNC\-RECOVER" "1" "06/28/2018" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
bfsync-recover \- Recover database to a consistent state
.SH "SYNOPSIS"
.sp
.nf
\fIbfsync recover\fR [<repo>]
.fi
.SH "DESCRIPTION"
.sp
Since bfsync uses Berkeley DB to store its data, the data integrity is protected even against extreme failures\&. For instance if the process that accesses the database crashes or is killed, or if everything on the host running bfsync is interrupted due to power failure or kernel panic\&. After such failures, the database needs recovery\&. Trying to mount bfsyncfs in that situation or using the bfsync utility will fail\&.
.sp
In this situation running bfsync recover will restore the database to a consistent state and after that, normal work can start again\&. The repository is choosen either from the <repo> argument, or if that is not there, from the directory bfsync recover was started in\&.
.sp
Recovery can not be done if there are still processes that are using the database\&. In that case, these processes need to be terminated before recovery\&. Attempting recovery if it is not necessary is safe, so it won\(cqt change the database state\&.
