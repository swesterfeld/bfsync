#!/usr/bin/env python

from setuptools import setup, Extension
from subprocess import Popen, PIPE

def parse_config_flags (flags):
  config_flags = { "-I" : [], "-L" : [], "-l" : []}
  extra_args = []
  for token in flags.split():
    flag, value = token[:2], token[2:]
    if (flag == '-D'): # defines
      extra_args += [ token ]
    elif token == "-pthread":  # ignore -pthread; shouldn't be necessary
      pass
    else:
      config_flags[flag].append (value)
  return config_flags, extra_args

config_flags, extra_args = parse_config_flags (
  "@BOOST_CPPFLAGS@ " +
  "@GLIB_CFLAGS@ @GLIB_LIBS@ " +
  "@FUSE_CFLAGS@ @FUSE_LIBS@")

bfsyncdb_module = Extension('_bfsyncdb',
                           depends = [ "bfsyncdb.hh", "bfbdb.hh", "bfhistory.hh", "bfdeduptable.hh" ],
                           extra_compile_args = extra_args,
                           sources=['bfsyncdb.cc', 'bfsyncdb.i', 'bfsqlexport.cc', 'bfhashcache.cc', 'bfintegrity.cc' ],
                           library_dirs = ['.libs'] + config_flags["-L"],
                           libraries=['bfsync'] + config_flags["-l"],
                           include_dirs=['..'] + config_flags["-I"],
                           language='c++',
                           swig_opts=['-c++'],
                           undef_macros=['NDEBUG']
                           )

setup (name = 'bfsyncdb',
       version = '@VERSION@',
       author = 'Stefan Westerfeld',
       author_email = 'stefan@space.twc.de',
       description = 'Big File synchronization tool - python binding',
       ext_modules = [bfsyncdb_module],
       py_modules = ["bfsyncdb"],
       )
