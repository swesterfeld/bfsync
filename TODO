* automatic deadlock detection
* retry transactions on deadlock
* properly handle copy-on-write() errors (disk full, ...)
* check for open files before allowing readonly mode
* better cache expiring for INodeLinks
* merge INodeLinks and INode cache
* detect protocol version
* check permissions for touch
* rename bfsync.transferutils => bfsync.transfer (and other fooutils => foo)

* background hashing for fs
* node discovery
* support partial commit
* auto-push/pull
* excludes

Performance:
============
* cache friendly get would hash and copy file-by-file, since then the data
  is read only once from the physical media
* sorted hash dedup
* revert could be O(changed inodes) if it used changed_inodes & history diffs
* backlinks allow faster status | merge

RELEASE:
========
* register pids, to be able to detect when to recover (<-> add locking)
* flush before status
* merge command for interruptible merges
* persistent filesystem locking during active journal entry
* collect

==============================================================================================

ENCRYPTED MODE:
* files are stored as continuous stream of encrypted data
* index is stored as pointers into file stream
* splitting (as 16M blocks) enables easy update
* passphrase-derived key
* sha-256 checksum for each block at the beginning
  -> partial writes become invisible

==============================================================================================
